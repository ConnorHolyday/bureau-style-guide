/*------------------------------------*\
    GLOBAL MIXINS
\*------------------------------------*/

 //*****************
// FONT DECLARATION

 //*****************
// FONT DECLARATION

$weights: (
	hairline: 100,
	thin: 200,
	light: 300,
	normal: 400,
	medium: 500,
	semibold: 600,
	bold: 700,
	heavy: 800,
	black: 900
);

@mixin primary-font($weight: normal, $style: normal) {

	$font-weight: map-get($weights, $weight);

	@if ( $font-weight == null ) {
		@error 'Font weight "#{$weight}" passed to `primary-font` mixin does not exist';
		@return false;
	}

	@if ( $style != 'normal' and $style != 'italic' ) {
		@error 'Font style "#{$style}" passed to `primary-font` mixin is invalid';
		@return false;
	}

	$font-family: 'lato-' + str-slice($style, 0, 1) + ($font-weight / 100);

	font-family: $font-family, lato, "Helvetica Neue", Helvetica, arial, sans-serif;
	font-weight: $font-weight;
	font-style: $style;

	-webkit-font-smoothing: antialiased;

}


 //***************************
// TYPE AND LIST BASED MIXINS

@mixin font-size($size: $base-font-size) {
	font-size: $size + px;
	font-size: $size / $base-font-size + rem;
}

// Generates em value based on the root font size
// otherwise supply different value
@function em($value, $size: $base-font-size) {
	@return $value / $size + em;
}


 //*******************
// COLOR BASED MIXINS

@function color($colour, $opacity: 1) {

	$color: map-get($colours, $colour);

	@if ( $color == null ) {
		@error 'Colour "#{$colour}" passed to `color` mixin does not exist';
		@return false;
	}

	@if $opacity < 1 {
		@return rgba($color, $opacity);
	} @else {
		@return $color;
	}

}


 //*************
// SVG FALLBACK

@mixin svg($path) {
	background-image: url($path + '.svg');

	.no-svg & {
		background-image: url($path + '.png');
		background-size: 100%;
	}
}


 //**************
// MEDIA QUERIES

// Pass in a value or a breakpoint letter
@mixin mq($point, $IE9: false, $query1: min, $query2: width) {

	@if map-has-key($breakpoints, $point) {
		$point: map-get($breakpoints, $point);
	}

    @if $IE9 == true{

        .lt-ie9 {
            @content;
        }

        @media screen and (#{$query1}-#{$query2}: $point + px) {
            @content;
        }

    } @else {

        @media screen and (#{$query1}-#{$query2}: $point + px) {
            @content;
        }

    }

}


/**
 * Example of use
 *

    .example {
        @include font-size(12);

        @include mq(400) {
            @include font-size(14);
        }

        @include mq(M) {
            @include font-size(18);
        }
    }

 *
 */
